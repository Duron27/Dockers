name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      id: build
      run: |
        docker build . --file Dockerfile --tag my-image-name:$(date +%s)
        echo "DOCKER_ID=$(docker ps -l -q)" >> $GITHUB_ENV
    - name: Copy zip files from Docker container
      run: |
        docker cp $DOCKER_ID:/root/zips/ ${{ github.workspace }}/zips/
    - id: set-matrix
      uses: actions/github-script@v0.9.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const files = fs.readdirSync('${{ github.workspace }}/zips').filter(file => file.endsWith('.zip'));
          console.log(files);
          return JSON.stringify(files);
      env:
        CI: true
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.file }}
        asset_name: ${{ matrix.file }}
        asset_content_type: application/zip
      
        matrix:
          file: ${{fromJson(steps.set-matrix.outputs.result)}}
